/* Auto-generated by genmsg_cpp for file /home/guardian/local_packages/guardian_package/guardian_robot/guardian_pad/srv/enable_disable.srv */
#ifndef GUARDIAN_PAD_SERVICE_ENABLE_DISABLE_H
#define GUARDIAN_PAD_SERVICE_ENABLE_DISABLE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace guardian_pad
{
template <class ContainerAllocator>
struct enable_disableRequest_ {
  typedef enable_disableRequest_<ContainerAllocator> Type;

  enable_disableRequest_()
  : value(false)
  {
  }

  enable_disableRequest_(const ContainerAllocator& _alloc)
  : value(false)
  {
  }

  typedef uint8_t _value_type;
  uint8_t value;


  typedef boost::shared_ptr< ::guardian_pad::enable_disableRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::guardian_pad::enable_disableRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct enable_disableRequest
typedef  ::guardian_pad::enable_disableRequest_<std::allocator<void> > enable_disableRequest;

typedef boost::shared_ptr< ::guardian_pad::enable_disableRequest> enable_disableRequestPtr;
typedef boost::shared_ptr< ::guardian_pad::enable_disableRequest const> enable_disableRequestConstPtr;


template <class ContainerAllocator>
struct enable_disableResponse_ {
  typedef enable_disableResponse_<ContainerAllocator> Type;

  enable_disableResponse_()
  : ret(false)
  {
  }

  enable_disableResponse_(const ContainerAllocator& _alloc)
  : ret(false)
  {
  }

  typedef uint8_t _ret_type;
  uint8_t ret;


  typedef boost::shared_ptr< ::guardian_pad::enable_disableResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::guardian_pad::enable_disableResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct enable_disableResponse
typedef  ::guardian_pad::enable_disableResponse_<std::allocator<void> > enable_disableResponse;

typedef boost::shared_ptr< ::guardian_pad::enable_disableResponse> enable_disableResponsePtr;
typedef boost::shared_ptr< ::guardian_pad::enable_disableResponse const> enable_disableResponseConstPtr;

struct enable_disable
{

typedef enable_disableRequest Request;
typedef enable_disableResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct enable_disable
} // namespace guardian_pad

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::guardian_pad::enable_disableRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::guardian_pad::enable_disableRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::guardian_pad::enable_disableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e431d687bf4b2c65fbd94b12ae0cb5d9";
  }

  static const char* value(const  ::guardian_pad::enable_disableRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xe431d687bf4b2c65ULL;
  static const uint64_t static_value2 = 0xfbd94b12ae0cb5d9ULL;
};

template<class ContainerAllocator>
struct DataType< ::guardian_pad::enable_disableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "guardian_pad/enable_disableRequest";
  }

  static const char* value(const  ::guardian_pad::enable_disableRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::guardian_pad::enable_disableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool value\n\
\n\
";
  }

  static const char* value(const  ::guardian_pad::enable_disableRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::guardian_pad::enable_disableRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::guardian_pad::enable_disableResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::guardian_pad::enable_disableResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::guardian_pad::enable_disableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e2cc9e9d8c464550830df49c160979ad";
  }

  static const char* value(const  ::guardian_pad::enable_disableResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xe2cc9e9d8c464550ULL;
  static const uint64_t static_value2 = 0x830df49c160979adULL;
};

template<class ContainerAllocator>
struct DataType< ::guardian_pad::enable_disableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "guardian_pad/enable_disableResponse";
  }

  static const char* value(const  ::guardian_pad::enable_disableResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::guardian_pad::enable_disableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool ret\n\
\n\
\n\
";
  }

  static const char* value(const  ::guardian_pad::enable_disableResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::guardian_pad::enable_disableResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::guardian_pad::enable_disableRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.value);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct enable_disableRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::guardian_pad::enable_disableResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.ret);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct enable_disableResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<guardian_pad::enable_disable> {
  static const char* value() 
  {
    return "44aff93ccf05e13b2ec5d62303a837a2";
  }

  static const char* value(const guardian_pad::enable_disable&) { return value(); } 
};

template<>
struct DataType<guardian_pad::enable_disable> {
  static const char* value() 
  {
    return "guardian_pad/enable_disable";
  }

  static const char* value(const guardian_pad::enable_disable&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<guardian_pad::enable_disableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "44aff93ccf05e13b2ec5d62303a837a2";
  }

  static const char* value(const guardian_pad::enable_disableRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<guardian_pad::enable_disableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "guardian_pad/enable_disable";
  }

  static const char* value(const guardian_pad::enable_disableRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<guardian_pad::enable_disableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "44aff93ccf05e13b2ec5d62303a837a2";
  }

  static const char* value(const guardian_pad::enable_disableResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<guardian_pad::enable_disableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "guardian_pad/enable_disable";
  }

  static const char* value(const guardian_pad::enable_disableResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // GUARDIAN_PAD_SERVICE_ENABLE_DISABLE_H

